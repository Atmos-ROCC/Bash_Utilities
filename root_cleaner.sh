( ver="2.1";red=$(echo -e "\E[31m");green=$(echo -e "\E[92m");cyan=$(echo -e "\E[36m");lt_gray=$(echo -e "\E[37m");clear_color=$(echo -e "\E[0m"); clear;message_tmp="/dev/shm/rootcleanup.tmp"; log_tmp="/dev/shm/rootcleanuplog.tmp"; cleanup() { /bin/rm -f "$message_tmp"; /bin/rm -f "$log_tmp"; [[ "$1" != "" && "$2" -ne 0 ]] && echo -e "\n${red}#${clear_color}#${red}# ${1}${clear_color}\n" || echo -e "${clear_color}"; exit $2; };echo -en "\n${lt_gray}# Checking for read-only root directory: ";[[ $(touch /test.tmp 2>${log_tmp}) ]] && { mount -o remount,rw /dev/mapper/AtmosVG-LVRoot &>"${log_tmp}" && echo "${red}Remounted root as read/write.${clear_color}"; } || { /bin/rm -f /test.tmp &>"${log_tmp}" && echo "${green}Root directory already in read/write state.${clear_color}"; };echo -en "${lt_gray}# Checking if /var directory is mounted: "; [[ -n "$(grep /dev/mapper/AtmosVG-LVvar /proc/mounts)" ]] && { echo -e "${green}/var directory is already mounted. ${clear_color}"; echo -e "Suggest to check for corruption - run: \ngrep -i corruption /var/log/messages\ngrep -i corrupt /var/log/crash" >> "$message_tmp"; } || { echo -e "${red}/var directory is NOT mounted. ${clear_color}" && read -p "${lt_gray}# Suggest to check for corruption in /var logical volume. Proceed with the check? (y\n) " -n 1 xfscheck_var; [[ $xfscheck_var =~ [yY] ]] && { echo -en "\n${lt_gray}# Please wait... running: xfs_repair /dev/mapper/AtmosVG-LVvar";xfs_repair /dev/mapper/AtmosVG-LVvar 2> "${log_tmp}" && { echo -en "${green} xfs_repair successful.\n${lt_gray}# Mounting /var: ${clear_color}"; mount -t xfs /dev/mapper/AtmosVG-LVvar /var 2>$log_tmp && { echo -en "${green} /var directory is now mounted.${clear_color}"; service sshd restart &>${log_tmp}; } || echo -en "${red} /var FAILED to mount.${clear_color}"; } || { echo -e "\n${red}# xfs_repair of /var logical volume failed. You may need to retry with -L option.${clear_color}"; [[ $(grep "the -L option" "${log_tmp}") ]] && read -p "${lt_gray}# Try xfs_repair again with -L option? (y\n) " -n 1 xfscheck_var; [[ $xfscheck_var =~ [yY] ]] && { echo -en "\n${lt_gray}# Please wait... running: xfs_repair -L /dev/mapper/AtmosVG-LVvar";xfs_repair -L /dev/mapper/AtmosVG-LVvar 2> "${log_tmp}" && { echo -en "${green} xfs_repair successful.\n${lt_gray}# Mounting /var: ${clear_color}"; mount -t xfs /dev/mapper/AtmosVG-LVvar /var 2>$log_tmp && { echo -en "${green} /var directory is now mounted.${clear_color}"; sleep 5; service sshd restart 2>$log_tmp; } || echo -en "${red} /var FAILED to mount.${clear_color}"; } || echo -e "${red}xfs_repair -L of /var logical volume failed. Please try manually.${clear_color}";cat ${log_tmp};cleanup "" 2; } || echo;cleanup "" 1; };cat ${log_tmp};cleanup "" 2; } || echo;cleanup "" 1; }; echo -en "${lt_gray}# Checking if swap space is  configured: "; [[ -n "$(swapon -s | grep /dev/mapper/AtmosVG-LVSwap)" ]] && echo -e "${green}swap space found! ${clear_color}" || { echo -en "${red}No swap space detected! ${clear_color}" && mkswap /dev/AtmosVG/LVSwap &>${log_tmp} && swapon /dev/AtmosVG/LVSwap &>${log_tmp} && echo -e "${green}Correcting: swap created and mounted.${clear_color}" ; free -m | grep Swap; };echo -en "${lt_gray}# Creating temporary directory for root: ";mkdir -pv /var/tmp/rootfilesystem &>"${log_tmp}" && echo -e "${green}/var/tmp/rootfilesystem created! ${clear_color}" || { echo -e "${red}FAILED.${clear_color}" && cleanup "" 1; }; echo -e "${lt_gray}# Binding root to temporary directory."; df -h | egrep -v 'ss|atmos' | egrep --color 'root|Root|[1-9][0-9][0-9]M|[8-90][0-9]%'; mount --bind / /var/tmp/rootfilesystem/; cd /var/tmp/rootfilesystem/ ;echo -e "${lt_gray}\n# Begin root cleanup:\n# Moving files hidden beneath the /var mount point to /var/tempfromroot: "; source_dir='/var/tmp/rootfilesystem/var';du -ch -d2 --exclude=proc var | egrep --color '[1-9][0-9][0-9]M|[1-9].[0-9]G'; target_dir='/var/tempfromroot/';mkdir -pv /var/tempfromroot; find $source_dir -name '*' -type f -exec mv -f {} $target_dir \; ;echo -e "${lt_gray}# Removing garbage files created by rsyslog."; pkill rsyslog; echo -e "${lt_gray}# Large directories left in root:"; du -ch -d2 --exclude=proc| egrep --color '[1-9][0-9][0-9]M|[1-9].[0-9]G'; echo -e "${lt_gray}\n# Notable files/directories in /tmp:"; ls -lah tmp | egrep --color '[1-9][0-9][0-9]M|[1-9].[0-9]G'; echo -e "${lt_gray}# Disk usage after clean-up"; df -h | egrep -v 'ss|atmos' | egrep --color 'root|Root|[1-9][0-9][0-9]M|[8-90][0-9]%'; echo -e "${lt_gray}\n# Unmounting root from temporary directory."; /bin/rm -f "$message_tmp"; /bin/mv -f "$log_tmp" /var/tmp/rootcleanup.log;cd - 1>/dev/null; umount /var/tmp/rootfilesystem || { cd / && umount /var/tmp/rootfilesystem; } ; rmdir /var/tmp/rootfilesystem;mount | grep --color "rootfilesystem" && echo -e "\n${lt_gray}# Temporary directory still mounted. Please run \"umount /var/tmp/rootfilesystem\"" || echo -e "# ${green}Done..! \n${clear_color}" )
